<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   version="1.1"
   id="svg1"
   width="1360"
   height="1360"
   viewBox="0 0 1360 1360"
   sodipodi:docname="KGameX.svg"
   inkscape:version="1.4 (1:1.4+202410161351+e7c3feb100)"
   inkscape:export-filename="KGameX - Japanese.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#505050"
     showgrid="true"
     showguides="true"
     inkscape:zoom="0.16"
     inkscape:cx="846.875"
     inkscape:cy="121.875"
     inkscape:window-width="1862"
     inkscape:window-height="1011"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="g1">
    <inkscape:grid
       id="grid1"
       units="px"
       originx="-320"
       originy="-320"
       spacingx="1"
       spacingy="1"
       empcolor="#0099e5"
       empopacity="0.30196078"
       color="#0099e5"
       opacity="0.14901961"
       empspacing="100"
       enabled="true"
       visible="true" />
    <inkscape:page
       x="0"
       y="0"
       width="1360"
       height="1360"
       id="page1"
       margin="0"
       bleed="0" />
  </sodipodi:namedview>
  <g
     inkscape:groupmode="layer"
     inkscape:label="Image"
     id="g1"
     style="display:inline"
     transform="translate(-320,-320)">
    <path
       d="m 494.9125,1489.207 -19.55991,-3.912 c -0.25239,3.912 -1.13574,8.8335 -2.65006,12.9979 -1.51431,4.7953 -3.91198,11.3574 -7.31919,17.1622 -4.79533,7.9502 -12.87169,19.3076 -21.83139,25.9958 l 15.77413,9.5907 c 7.57158,-6.5621 15.39554,-17.2885 20.44326,-26.5006 h 26.62673 c -2.01909,26.3744 -12.49311,41.8961 -25.74338,51.9916 -3.02863,2.5238 -7.44538,5.1739 -11.98833,6.9406 l 17.03605,11.4835 c 22.84094,-14.386 35.96501,-36.9745 38.23648,-70.4157 h 17.66702 c 2.90244,0 8.45493,0 13.12408,0.5048 v -17.2884 c -4.16437,0.7571 -9.84306,0.8833 -13.12408,0.8833 h -54.38918 l 3.5334,-9.2121 c 1.00955,-2.65 2.65006,-7.0668 4.16437,-10.2216 z m 81.1421,40.3818 v 19.8123 c 4.66914,-0.2524 13.12407,-0.631 20.31708,-0.631 14.76458,0 56.40827,0 67.76564,0 5.3001,0 11.73595,0.5048 14.76458,0.631 v -19.8123 c -3.28102,0.2523 -8.83351,0.7571 -14.76458,0.7571 -11.35737,0 -52.87487,0 -67.76564,0 -6.56204,0 -15.77413,-0.3786 -20.31708,-0.7571 z m 212.00424,-43.5366 -10.09544,4.0381 c 3.40721,4.9216 7.3192,12.367 9.96925,17.5409 l 10.09544,-4.2906 c -2.39767,-4.6691 -6.81442,-12.7455 -9.96925,-17.2884 z m 14.89078,-5.8049 -9.96925,4.1644 c 3.40721,4.7953 7.44539,12.1145 10.09544,17.4146 l 10.09544,-4.4168 c -2.27147,-4.4167 -6.94061,-12.3669 -10.22163,-17.1622 z m -56.91305,11.8621 -19.43372,-3.7858 c -0.25238,3.912 -1.13573,8.7074 -2.65005,12.8717 -1.51432,4.7954 -3.91198,11.3574 -7.31919,17.2885 -4.79534,7.8239 -12.87169,19.3075 -21.83139,25.9957 l 15.77412,9.5907 c 7.57158,-6.6882 15.26935,-17.4146 20.44327,-26.6267 h 26.62672 c -2.01909,26.3743 -12.49311,41.896 -25.74337,52.1177 -3.02863,2.3976 -7.44539,5.0477 -11.98834,6.9406 l 17.03606,11.3574 c 22.84093,-14.386 35.965,-36.8484 38.23648,-70.4157 h 17.66702 c 2.90244,0 8.45493,0.1262 13.12407,0.5047 v -17.2884 c -4.16437,0.7572 -9.84305,0.8834 -13.12407,0.8834 h -54.38919 l 3.53341,-9.0859 c 1.00954,-2.7763 2.65005,-7.193 4.03817,-10.3479 z m 82.40404,37.4794 v 19.8123 c 4.66914,-0.2524 13.12407,-0.631 20.31707,-0.631 14.76459,0 56.40828,0 67.76565,0 5.3001,0 11.73595,0.5048 14.76458,0.631 v -19.8123 c -3.28102,0.2523 -8.83351,0.7571 -14.76458,0.7571 -11.35737,0 -52.87487,0 -67.76565,0 -6.56203,0 -15.77412,-0.3786 -20.31707,-0.7571 z m 132.50258,40.2555 c -4.16437,0.1262 -9.59067,0.1262 -13.88123,0.1262 l 2.90244,18.4242 c 4.03817,-0.5048 8.70731,-1.1357 11.86214,-1.5143 15.90032,-1.6405 54.13676,-5.6787 74.58006,-8.0764 2.3977,5.4263 4.4168,10.6002 6.0573,14.8908 l 17.036,-7.5716 c -5.8049,-14.1336 -18.6765,-38.8674 -27.6362,-52.4963 l -15.7742,6.4359 c 4.1644,5.5525 8.8335,14.0074 13.2503,23.0933 -12.7455,1.5143 -30.66491,3.5334 -46.06045,5.0477 6.18346,-16.9098 16.53128,-48.9629 20.56945,-61.3298 1.8929,-5.5525 3.7858,-10.2216 5.4263,-14.0074 l -20.06468,-4.1644 c -0.50477,4.2906 -1.26193,8.2026 -3.02863,14.6384 -3.6596,13.1241 -14.5122,47.701 -21.83139,66.3775 z m 113.82611,-2.65 v 18.298 c 4.2905,-0.5048 8.7073,-0.631 12.4931,-0.631 h 83.1612 c 2.9024,0 8.2025,0.1262 11.8621,0.631 v -18.298 c -3.281,0.5047 -7.3192,1.0095 -11.8621,1.0095 h -33.4412 v -51.4867 h 26.6267 c 3.6596,0 8.0764,0.2524 11.8622,0.5047 v -17.2884 c -3.6596,0.3786 -8.0764,0.7572 -11.8622,0.7572 h -68.649 c -3.5334,0 -8.7073,-0.2524 -11.9883,-0.7572 v 17.2884 c 3.1548,-0.2523 8.5811,-0.5047 11.9883,-0.5047 h 24.3553 v 51.4867 h -32.053 c -3.912,0 -8.455,-0.3786 -12.4931,-1.0095 z m 180.5821,-54.1368 -15.0169,4.9215 c 3.1548,6.562 8.7073,21.8314 10.2216,28.0148 l 15.1432,-5.3001 c -1.7667,-5.8048 -7.9502,-22.2099 -10.3479,-27.6362 z m 46.5653,9.2121 -17.6671,-5.6787 c -1.5143,15.7741 -7.5715,32.5578 -16.1527,43.2842 -10.474,13.124 -28.0148,22.7147 -41.896,26.3743 l 13.2502,13.5027 c 14.7646,-5.5525 30.5387,-16.1527 42.2747,-31.2959 8.5811,-11.105 13.8812,-24.2291 17.1622,-36.9746 0.7572,-2.5238 1.5143,-5.1739 3.0287,-9.212 z m -75.842,-2.5239 -15.1432,5.4263 c 3.0286,5.5525 9.3383,22.3362 11.4836,29.1506 l 15.3955,-5.8049 c -2.5238,-7.0668 -8.5811,-22.3362 -11.7359,-28.772 z m 164.0509,-30.1601 -18.4242,-6.0573 c -1.1358,4.2906 -3.7858,10.0954 -5.6787,13.2503 -6.3097,10.8526 -17.2884,27.1315 -39.3722,40.6341 l 14.1336,10.474 c 12.3669,-8.4549 23.3457,-19.5599 31.8006,-30.5387 h 35.4603 c -2.0191,9.4645 -9.3383,24.6077 -17.9194,34.4507 -10.9788,12.4931 -25.1124,23.4719 -50.8558,31.1697 l 14.8908,13.3765 c 23.7242,-9.3383 38.9936,-20.9481 50.9819,-35.5865 11.3574,-14.1336 18.5504,-30.9173 21.9576,-42.1484 1.0096,-3.1549 2.7763,-6.6883 4.1644,-9.0859 l -12.8717,-7.9502 c -2.9024,0.8834 -7.0668,1.5143 -10.9788,1.5143 h -25.3648 l 0.3786,-0.6309 c 1.5143,-2.7763 4.7953,-8.455 7.6978,-12.8717 z m 155.3435,12.8717 -10.3478,-7.6978 c -2.5239,0.8833 -7.5716,1.6405 -12.9979,1.6405 -5.6787,0 -37.9841,0 -44.5461,0 -3.7858,0 -11.4836,-0.3786 -14.8908,-0.8834 v 17.9194 c 2.65,-0.1261 9.5907,-0.8833 14.8908,-0.8833 5.4263,0 37.6055,0 42.7794,0 -2.7763,8.9597 -10.474,21.4528 -18.8028,30.9173 -11.8621,13.2502 -31.422,28.6458 -51.7391,36.2174 l 12.9979,13.6288 c 17.2884,-8.2025 34.0721,-21.3266 47.4486,-35.334 11.8621,11.3573 23.598,24.229 31.8006,35.5864 l 14.386,-12.4931 c -7.4454,-9.0859 -22.7148,-25.2386 -35.2079,-36.0912 8.455,-11.4836 15.5218,-24.86 19.8123,-34.7031 1.1358,-2.5238 3.4073,-6.4358 4.4168,-7.8239 z"
       id="text1"
       style="font-weight:bold;font-size:126.193px;font-family:Gotham;-inkscape-font-specification:'Gotham Bold';text-align:center;text-anchor:middle;fill:#000000;stroke-width:10.5161;stroke-linejoin:round"
       aria-label="ケーゲームエックス" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:70;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="M 445,1402 H 1555"
       id="path1"
       sodipodi:nodetypes="cc" />
    <path
       style="display:inline;fill:none;stroke:#c70139;stroke-width:60;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       id="path2"
       sodipodi:type="arc"
       sodipodi:cx="1000"
       sodipodi:cy="962"
       sodipodi:rx="535"
       sodipodi:ry="535"
       sodipodi:start="2.1660841"
       sodipodi:end="6.1208362"
       sodipodi:arc-type="arc"
       d="M 700.00033,1404.9731 A 535,535 0 0 1 496.11739,782.20201 535,535 0 0 1 1048.1897,429.17475 535,535 0 0 1 1527.9649,875.52428"
       sodipodi:open="true" />
    <path
       id="path14"
       style="fill:none;stroke:#c70139;stroke-width:70;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 472.00021,1039.8867 238.72988,138.3098 161.77061,-43.3463 276.6227,98.0637 v 0 l 187.0188,-50.1116 42.4293,-88.7754 164.0618,-2.7845 64.4167,-189.6443 -258.3228,-23.90171 -34.5029,37.02593 -120.7054,-18.50632 -131.7591,58.37544 -263.07246,70.49006 -213.25766,-31.02678 -115.96104,31.07168" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:70;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 1460.6024,1092.6347 -54.8899,174.2343 -395.5894,105.9979 -105.95495,-60.4204 -54.02833,14.4768 -65.44436,-38.3117 -171.33372,45.9088"
       id="path15"
       sodipodi:nodetypes="ccccccc" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:70;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 723.91778,1174.6629 32.55852,121.51"
       id="path16" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:70;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 857.64776,1138.83 46.52039,173.6165"
       id="path17" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:70;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 545.88455,1082.6921 59.88842,223.5066"
       id="path18" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:70;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="M 891.57737,1000.1917 710.5169,905.01462 512.49347,958.07483 585.42968,994.05472"
       id="path19" />
    <path
       style="display:inline;fill:none;stroke:#c70139;stroke-width:60;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       id="path20"
       sodipodi:type="arc"
       sodipodi:cx="1000"
       sodipodi:cy="962"
       sodipodi:rx="535"
       sodipodi:ry="535"
       sodipodi:start="0.2414405"
       sodipodi:end="0.9537923"
       sodipodi:arc-type="arc"
       d="m 1519.4821,1089.9194 a 535,535 0 0 1 -209.9342,308.4349"
       sodipodi:open="true" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:35;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 902.51838,1061.5611 186.23282,-49.901 95.6526,30.811 60.1438,-72.55649 112.902,-2.37329 29.9695,-29.18821 137.8514,13.59098 -86.06,73.60511 -94.8468,-3.5353 -51.6228,100.1123 -129.7892,34.7769 z"
       id="path23"
       sodipodi:nodetypes="cccccccccccc" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:40;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 739.27405,627.65573 86.93332,-23.29372 7.76457,28.97778 -57.95555,15.52914 15.52915,57.95555 -28.97778,7.76457 z"
       id="path24"
       sodipodi:nodetypes="ccccccc" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:40;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 911.24601,612.63426 -7.76457,-28.97777 28.97777,-7.76457 7.76458,28.97776 z"
       id="path25" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:40;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 1096.6667,531.89268 23.2937,86.93332 -28.9778,7.76457 -15.5291,-57.95555 -57.9556,15.52915 -7.7646,-28.97779 z"
       id="path26"
       sodipodi:nodetypes="ccccccc" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:40;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 1111.6881,703.86464 28.9778,-7.76457 7.7646,28.97777 -28.9778,7.76458 z"
       id="path27" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:40;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 1192.4297,889.28523 -86.9333,23.29372 -7.7646,-28.97778 57.9556,-15.52914 -15.5292,-57.95555 28.9778,-7.76458 z"
       id="path28"
       sodipodi:nodetypes="ccccccc" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:40;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 1020.4577,904.3067 7.7646,28.97777 -28.97781,7.76457 -7.76458,-28.97777 z"
       id="path29" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:40;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 835.0371,985.04828 -23.29372,-86.93332 28.97778,-7.76457 15.52914,57.95555 57.95555,-15.52915 7.76457,28.97778 z"
       id="path30"
       sodipodi:nodetypes="ccccccc" />
    <path
       style="fill:none;stroke:#c70139;stroke-width:40;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 820.01563,813.07632 -28.97777,7.76457 -7.76457,-28.97777 28.97777,-7.76458 z"
       id="path31" />
    <path
       style="fill:#c70139;stroke:#c70139;stroke-width:40;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1"
       d="m 935.23323,740.79281 48.29629,-12.94096 12.94095,48.29629 -48.29629,12.94096 z"
       id="path32" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
